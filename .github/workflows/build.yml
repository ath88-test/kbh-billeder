name: Build and Deploy to GKE

on:
- push

env:
  IMAGE: ${{ github.event.repository.name }}
  GKE_PROJECT: kbh-billeder
  CLUSTER_NAME: kbh-billeder-cluster-1
  ZONE: europe-west1-b
  CONTAINER_REGISTRY: eu.gcr.io
  CACHE_REGISTRY: ghcr.io

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup gcloud
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ env.GKE_PROJECT }}

    - name: Setup docker
      run: gcloud --quiet auth configure-docker $CONTAINER_REGISTRY

    - name: Log in to the Container registry cache
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.CACHE_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    #
    # - name: Setup kubectl
    #   uses: google-github-actions/get-gke-credentials@v0.2.1
    #   with:
    #     credentials: ${{ secrets.GKE_SA_KEY }}
    #     cluster_name: ${{ env.CLUSTER_NAME }}
    #     location: ${{ env.ZONE }}

    - name: Build image
      run: |-
        cat << EOF > .env
        DISABLE_NOTIFIER="true"
        NODE_ENV=beta
        EOF
        docker build \
          --cache-from=$CACHE_REGISTRY/$GKE_PROJECT/$IMAGE \
          --tag "$CACHE_REGISTRY/$GKE_PROJECT/$IMAGE" \
          --tag "$CONTAINER_REGISTRY/$GKE_PROJECT/$IMAGE:$GITHUB_SHA" \
          --tag "$CONTAINER_REGISTRY/$GKE_PROJECT/$IMAGE:latest" \
          .

    - name: Publish docker cache
      run: |-
        docker push "$CACHE_REGISTRY/$GKE_PROJECT/$IMAGE" --all-tags
    #
    # - name: Publish docker image
    #   if: ${{ github.ref == 'refs/heads/master' }}
    #   run: |-
    #     docker push "$CONTAINER_REGISTRY/$GKE_PROJECT/$IMAGE" --all-tags
    #
    # - name: Deploy to beta environment
    #   if: ${{ github.ref == 'refs/heads/master' }}
    #   run: |-
    #     kubectl -n beta set env deployment/frontend DEPLOYED_AT="`date`"
